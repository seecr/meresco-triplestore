Changeset created on Thu Jun 21 07:02:38 UTC 2012 by Seecr (Seek You Too B.V.)

Description: added support for an optional result 'format' parameter in SPARQL query requests

    By default a SPARQL query's result is formatted as JSON. In order to get SPARQL XML output a client can now specify format=SPARQL in the HTTP GET querystring.

Baseline version: 01cebee6b706bf2ad81a3abab284885f47c83055

From 3bd1f03ac13238f0837b23dae4b2b3942c8221bd Mon Sep 17 00:00:00 2001
From: Seecr <development@seecr.nl>
Date: Wed, 20 Jun 2012 16:48:27 +0200
Subject: [PATCH] JJ/JPM: supporting optional result 'format' parameter in query requests ('SPARQL' for XML output).

---
 .../meresco/owlimhttpserver/OwlimHttpHandler.java  |   10 +++++++++-
 .../meresco/owlimhttpserver/OwlimTripleStore.java  |    7 +++++--
 .../org/meresco/owlimhttpserver/TripleStore.java   |    4 +++-
 .../owlimhttpserver/OwlimHttpHandlerTest.java      |   15 ++++++++++++++-
 .../owlimhttpserver/OwlimTripleStoreTest.java      |   12 ++++++++++++
 .../test/org/meresco/owlimhttpserver/TSMock.java   |    9 ++++++++-
 6 files changed, 51 insertions(+), 6 deletions(-)

diff --git a/server/src/java/org/meresco/owlimhttpserver/OwlimHttpHandler.java b/server/src/java/org/meresco/owlimhttpserver/OwlimHttpHandler.java
index c49750a..837fd08 100644
--- a/server/src/java/org/meresco/owlimhttpserver/OwlimHttpHandler.java
+++ b/server/src/java/org/meresco/owlimhttpserver/OwlimHttpHandler.java
@@ -39,6 +39,9 @@ import java.io.Writer;
 
 import java.net.URI;
 
+import org.openrdf.query.resultio.TupleQueryResultFormat;
+
+
 public class OwlimHttpHandler implements HttpHandler {
     TransactionLog transactionLog;
     TripleStore tripleStore;
@@ -131,7 +134,12 @@ public class OwlimHttpHandler implements HttpHandler {
 
     public String executeQuery(QueryParameters params) {
         String query = params.singleValue("query");
-        return tripleStore.executeQuery(query);
+        String format = params.singleValue("format");
+        TupleQueryResultFormat resultFormat = TupleQueryResultFormat.JSON;
+        if ("SPARQL".equals(format)) {
+            resultFormat = TupleQueryResultFormat.SPARQL;
+        }
+        return tripleStore.executeQuery(query, resultFormat);
     }
 
     public void valdateRDF(QueryParameters params, String httpBody) throws Exception {
diff --git a/server/src/java/org/meresco/owlimhttpserver/OwlimTripleStore.java b/server/src/java/org/meresco/owlimhttpserver/OwlimTripleStore.java
index 27f53a0..12fb12f 100644
--- a/server/src/java/org/meresco/owlimhttpserver/OwlimTripleStore.java
+++ b/server/src/java/org/meresco/owlimhttpserver/OwlimTripleStore.java
@@ -130,8 +130,11 @@ public class OwlimTripleStore implements TripleStore {
         }
     }
 
-
     public String executeQuery(String sparQL) {
+        return executeQuery(sparQL, TupleQueryResultFormat.JSON);
+    }
+
+    public String executeQuery(String sparQL, TupleQueryResultFormat resultFormat) {
         RepositoryConnection conn = null;
         TupleQuery tupleQuery = null;
         TupleQueryResult tupleQueryResult = null;
@@ -143,7 +146,7 @@ public class OwlimTripleStore implements TripleStore {
                 tupleQuery = conn.prepareTupleQuery(QueryLanguage.SPARQL, sparQL);
                 tupleQueryResult = tupleQuery.evaluate();
                 ByteArrayOutputStream o = new ByteArrayOutputStream();
-                QueryResultIO.write(tupleQueryResult, TupleQueryResultFormat.JSON, o);
+                QueryResultIO.write(tupleQueryResult, resultFormat, o);
                 result = o.toString("UTF-8");
                 tupleQueryResult.close();
             } catch (QueryEvaluationException e) {
diff --git a/server/src/java/org/meresco/owlimhttpserver/TripleStore.java b/server/src/java/org/meresco/owlimhttpserver/TripleStore.java
index 45a6251..2c02b27 100644
--- a/server/src/java/org/meresco/owlimhttpserver/TripleStore.java
+++ b/server/src/java/org/meresco/owlimhttpserver/TripleStore.java
@@ -28,10 +28,11 @@
 package org.meresco.owlimhttpserver;
 
 import org.openrdf.model.Resource;
+import org.openrdf.model.Statement;
 import org.openrdf.model.URI;
 import org.openrdf.model.Value;
+import org.openrdf.query.resultio.TupleQueryResultFormat;
 import org.openrdf.repository.RepositoryResult;
-import org.openrdf.model.Statement;
 
 
 public interface TripleStore {
@@ -40,6 +41,7 @@ public interface TripleStore {
     void delete(String identifier);
 
     String executeQuery(String sparQL);
+    String executeQuery(String sparQL, TupleQueryResultFormat format);
 
     RepositoryResult<Statement> getStatements(Resource subj, URI pred, Value obj);
 
diff --git a/server/src/test/org/meresco/owlimhttpserver/OwlimHttpHandlerTest.java b/server/src/test/org/meresco/owlimhttpserver/OwlimHttpHandlerTest.java
index 374c18e..2618572 100644
--- a/server/src/test/org/meresco/owlimhttpserver/OwlimHttpHandlerTest.java
+++ b/server/src/test/org/meresco/owlimhttpserver/OwlimHttpHandlerTest.java
@@ -52,7 +52,6 @@ import static org.meresco.owlimhttpserver.Utils.parseQS;
 
 public class OwlimHttpHandlerTest {
 
-
     public class OwlimHttpHandlerMock extends OwlimHttpHandler {
         public List<Object> actions = new ArrayList<Object>();
         private Exception _exception = null;
@@ -239,6 +238,20 @@ public class OwlimHttpHandlerTest {
         assertEquals("QUERYRESULT", exchange.getOutput());
     }
 
+    @Test public void testQueryWithResultFormatDispatch() throws Exception {
+        OwlimHttpHandlerMock h = new OwlimHttpHandlerMock();
+
+        HttpExchangeMock exchange = new HttpExchangeMock("/query?format=SPARQL&query=SELECT%20?x%20?y%20?z%20WHERE%20%7B%20?x%20?y%20?z%20%7D", "");
+        h.handle(exchange);
+        assertEquals(2, h.actions.size());
+        assertEquals("executeQuery", h.actions.get(0));
+        QueryParameters qp = (QueryParameters) h.actions.get(1);
+        assertEquals("SELECT ?x ?y ?z WHERE { ?x ?y ?z }", qp.singleValue("query"));
+        assertEquals("SPARQL", qp.singleValue("format"));
+        assertEquals(200, exchange.responseCode);
+        assertEquals("QUERYRESULT", exchange.getOutput());
+    }
+
     @Test public void test404ForOtherRequests() throws Exception {
         OwlimHttpHandlerMock h = new OwlimHttpHandlerMock();
 
diff --git a/server/src/test/org/meresco/owlimhttpserver/OwlimTripleStoreTest.java b/server/src/test/org/meresco/owlimhttpserver/OwlimTripleStoreTest.java
index 604b3bf..8764650 100644
--- a/server/src/test/org/meresco/owlimhttpserver/OwlimTripleStoreTest.java
+++ b/server/src/test/org/meresco/owlimhttpserver/OwlimTripleStoreTest.java
@@ -36,6 +36,7 @@ import static org.junit.Assert.*;
 
 import static org.meresco.owlimhttpserver.Utils.createTempDirectory;
 import static org.meresco.owlimhttpserver.Utils.deleteDirectory;
+import org.openrdf.query.resultio.TupleQueryResultFormat;
 import org.openrdf.repository.RepositoryResult;
 import org.openrdf.model.Statement;
 import org.openrdf.model.impl.URIImpl;
@@ -102,6 +103,17 @@ public class OwlimTripleStoreTest {
     }
     
     @Test
+    public void testSparqlResultInXml() throws Exception {
+        String answer = null;
+
+        ts.addRDF("uri:id0", rdf);
+        answer = ts.executeQuery("SELECT ?x ?y ?z WHERE {?x ?y ?z}", TupleQueryResultFormat.SPARQL);
+        assertTrue(answer.startsWith("<?xml"));
+        assertTrue(answer.indexOf("<literal>A.M. Özman Yürekli</literal>") > -1);
+        assertTrue(answer.endsWith("</sparql>\n"));
+    }
+
+    @Test
     public void testShutdown() throws Exception {
         ts.addRDF("uri:id0", rdf);
         ts.shutdown();
diff --git a/server/src/test/org/meresco/owlimhttpserver/TSMock.java b/server/src/test/org/meresco/owlimhttpserver/TSMock.java
index 1aed79a..7f3d03c 100644
--- a/server/src/test/org/meresco/owlimhttpserver/TSMock.java
+++ b/server/src/test/org/meresco/owlimhttpserver/TSMock.java
@@ -30,10 +30,12 @@ import java.util.List;
 import java.util.ArrayList;
 
 import org.openrdf.model.Resource;
+import org.openrdf.model.Statement;
 import org.openrdf.model.URI;
 import org.openrdf.model.Value;
+import org.openrdf.query.resultio.TupleQueryResultFormat;
 import org.openrdf.repository.RepositoryResult;
-import org.openrdf.model.Statement;
+
 
 public class TSMock implements TripleStore {
     public List<String> actions = new ArrayList<String>();
@@ -46,6 +48,11 @@ public class TSMock implements TripleStore {
         actions.add("delete:" + identifier);
     }
 
+    public String executeQuery(String sparQL, TupleQueryResultFormat resultFormat) {
+        actions.add("executeQuery:" + sparQL);
+        return "<result/>";
+    }
+
     public String executeQuery(String sparQL) {
         actions.add("executeQuery:" + sparQL);
         return "<result/>";
-- 
1.7.2.5

